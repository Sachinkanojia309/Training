------------------------------------------------------------INTRODUCTION-----------------------------------------------------------------

 1). Ruby is a scripting language designed by Yukihiro Matsumoto, also known as Matz.
 2). It runs on a variety of platforms, such as Windows, Mac OS, and the various versions of UNIX.
 3). Ruby is a pure object-oriented programming language.
 4). Ruby is a general-purpose, interpreted programming language.
 5). Ruby is a server-side scripting language similar to Python and PERL.
 6). Ruby can be used to write Common Gateway Interface (CGI) scripts.
 CGI -> a simple protocol for passing an HTTP request from a web server to a standalone program, and returning the output to the web browser
 
 7). Ruby can be embedded into Hypertext Markup Language (HTML).

------------------------------------------------------------Ruby Installation------------------------------------------------------------

 1). Update the system repositories with:
	sudo apt update

 2). Use the following command to install Ruby:
	sudo apt install ruby-full
	
 3). Type 'y' in terminal to give permission to download and install ruby.
 
 
 4). install rvm in linux :-
 
 	a). install GPG keys used to verify installation package:

key :- gpg --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
 
 	b). Install RVM stable with ruby (development version):

		-> \curl -sSL https://get.rvm.io | bash -s stable --ruby
		
 5). install ruby using rvm:-
 	-> rvm install 3.2.1
 	
 6). RVM Configuration :-
 	-> Defaults = RVM has a set of defaults recorded in the file.
 	
		$rvm_config_path/db
 	
 	-> Overriding Default Settings
		RVM also has a directory for user overrides located in $rvm_path/user/. In order to override RVM's default settings, 			place the appropriate key=value into the db file of that folder

		$rvm_path/user/db

 
                                    ----------IF ALREADY PRESENT UPDATE THE VERSION OF RUBY----------
                      
                a). check version on rvm(ruby version manager) in terminal.
                	rvm -v
                	
                b). list the version of ruby using rvm.
                	rvm list known
                	
                c). Now install the latest version of ruby.
                	rvm install 3.2.1(version number)
                	
                d). check for ruby version.
                	ruby -v
                	
                e). check ruby version present on system.
                	rvm list
                	
                f). switch between ruby versions.
                	rvm use (version_number_present_on_system)
                	
                g). set default version of ruby.
                	rvm 3.2.1 --default
                	

------------------------------------------------------------PLATFORMS TO RUN RUBY--------------------------------------------------------

 1). VIM (Vi IMproved) is a very simple text editor.
 
 2). Interactive Ruby (IRb) :- 
 	a). Interactive Ruby (IRb) provides a shell for experimentation. Within the IRb shell, you can immediately view expression results, line by line.
 	b). Just type irb at your command prompt and an Interactive Ruby Session will start.
 		
 		eg:- beryl@beryl-HP-Pavilion-Notebook:~$ irb
			3.2.1 :001 > puts "sachin"
			sachin
			 => nil                                      
			3.2.1 :003 >   out = "Hello"
			3.2.1 :004 >   puts out
			3.2.1 :005 > end
			 => :hello 
	
	c). Exit the ruby terminal type "quit".
	
 3). VScode :- install vscode , install extensions in vscode related to ruby.
 
 ----------------------------------------------------------- Ranges -------------------------------------------------------------------
 
 -> Ranges occur everywhere: January to December, 0 to 9, lines 50 through 67, and so on. 

 1). Ranges as Sequences :-
 	-> The first and perhaps the most natural use of ranges is to express a sequence. 
 	-> Sequences have a start point, an end point, and a way to produce successive values in the sequence.
	-> Ruby creates these sequences using the ''..'' and ''...'' range operators. 
	-> The two-dot form creates an inclusive range, while the three-dot form creates a range that excludes the specified high value.
	
	eg:-
	(1..5)        #==> 1, 2, 3, 4, 5
	(1...5)       #==> 1, 2, 3, 4
	('a'..'d')    #==> 'a', 'b', 'c', 'd'

 2). Ranges as Conditions :-
	-> Ranges may also be used as conditional expressions.
	
	eg:-
	score = 70

	result = case score
	   when 0..40 then "Fail"
	   when 41..60 then "Pass"
	   when 61..70 then "Pass with Merit"
	   when 71..100 then "Pass with Distinction"
	   else "Invalid Score"
	end

	puts result

 3). Ranges as Intervals :-
	-> A final use of the versatile range is as an interval test,
	seeing if some value falls within the interval represented by the range. This is done using ===, the case equality operator.

	eg1:-
		if ((1..10) === 5)
		   puts "5 lies in (1..10)"
		end

	eg2:-
		if (('a'..'j') === 'c')
		   puts "c lies in ('a'..'j')"
		end


------------------------------------------------------------ Iterators ----------------------------------------------------------------

 -> Iterators are nothing but methods supported by collections. 
 -> Objects that store a group of data members are called collections. 
 -> In Ruby, arrays and hashes can be termed collections.
 -> Iterators return all the elements of a collection, one after the other.
 
 1). Ruby each Iterator :-
	-> The each iterator returns all the elements of an array or a hash.

	Syntax :-
		collection.each do |variable|
		   code
		end
	
	eg:-
		ary = [1,2,3,4,5]
		ary.each do |i|
		   puts i
		end
		
 2). Ruby collect Iterator :-
	-> The collect iterator returns all the elements of a collection.

	Syntax:-
		collection = collection.collect
		
	eg:-
		a = [1,2,3,4,5]
		b = a.collect{|x| 10*x}
		puts b
		
