----------------------------------------------------------DATABASE ASSIGNMENT---------------------------------------------------------------

Questions
	1. The following relations keep track of airline flight information:
	   Flights(flno: integer, from: string, to: string, distance: integer, departs:time,arrives: time, price: integer)
	   Aircraft(aid: integer, aname: string, cruisingrange: integer)
	   Certified(eid: integer, aid: integer)
	   Employees(eid: integer, ename: string, salary: integer)
	   
	a). FLight Table :-
		CREATE TABLE Flights (                                                       
		  "flno" integer PRIMARY KEY,
		  "from" text,
		  "to" text,
		  "distance" integer,
		  "departs" time,
		  "arrives" time,
		  "price" integer
		);
		
		
		 flno |     from     |    to     | distance | departs  | arrives  | price  
		------+--------------+-----------+----------+----------+----------+--------
		 1001 | London       | Malaga    |     1680 | 10:30:00 | 14:20:00 |   4580
		 1002 | Toulouse     | Bristol   |      915 | 11:00:00 | 11:55:00 |  23550
		 1003 | Indianapolis | Venice    |     7569 | 06:00:00 | 08:00:00 |  45315
		 1004 | Los-angeles  | Honolulu  |     4108 | 17:05:00 | 21:05:00 |  16342
		 1005 | Mumbai       | Jaisalmer |      895 | 14:15:00 | 16:05:00 |   5200
		 1006 | Los-angeles  | chicago   |     2818 | 15:55:00 | 21:56:00 |  15390
		 1007 | madison      | new-york  |     1301 | 14:46:00 | 21:59:00 |  47242
		 1008 | Delhi        | Srinagar  |      640 | 08:10:00 | 09:15:00 |   8300
		 1009 | Hydrabad     | Lucknow   |     1088 | 07:00:00 | 09:05:00 |   8196
		 1010 | New-Delhi    | Montreal  |    11842 | 23:55:00 | 06:10:00 | 160000
		 1011 | Los-angeles  | Honolulu  |     4108 | 18:10:00 | 22:10:00 |  14050


		
		
	b). Aircraft Table :-
		CREATE TABLE Aircraft (                                                       
		  "aid" integer PRIMARY KEY,
		  "aname" text,
		  "cruising_range" integer
		);
		
		
		 aid |  aname  | cruising_range 
		-----+---------+----------------
		  51 | Boeing  |           6690
		  52 | Airbus  |           6940
		  53 | Cessna  |           3889
		  54 | Boeing  |           6690
		  55 | SG440   |           4200
		  56 | Airbus  |           4300
		  57 | Airbus  |           3200
		  58 | Boeing  |            800
		  59 | Bmbraer |           3000
		  60 | Airbus  |          16670

			
	c). Certified Table :-
		CREATE TABLE Certified (                               
		  "eid" integer,
		  "aid" integer
		);
		
		
		  	 eid | aid 
			-----+-----
			   1 |  51
			   1 |  59
			   1 |  60
			   1 |  56
			   2 |  55
			   2 |  52
			   2 |  57
			   3 |  53
			   3 |  52
			   4 |  54
			   4 |  60
			   4 |  51
			   4 |  58
			   5 |  60
			   5 |  55
			   6 |  55
			   6 |  52
			   6 |  53
			   6 |  56
			   7 |  57
			   7 |  54
			   7 |  53
			   8 |  58
			   9 |  59
			   9 |  56
			  10 |  60
			  13 |  55
			  13 |  53
			  13 |  51
			  15 |  57



		
	d). Employees Table :-
		CREATE TABLE Employees (                               
		  "eid" integer PRIMARY KEY,
		  "ename" text,
		  "salary" integer
		);

		
		 eid |      ename       | salary 
		-----+------------------+--------
		   1 | Georgy Street    | 100000
		   2 | Florina Pheasant | 450000
		   3 | Loren Irnys      | 250000
		   4 | Silvia Ainscow   | 550000
		   5 | Aleen Battill    |  80000
		   6 | Thaine Dainter   | 750000
		   7 | Elysia Kersey    |  35000
		   8 | Aurthur Zorzetti |  52000
		   9 | Shay Franzetti   | 110000
		  10 | Ruby Rodenborch  | 130000
		  11 | Raine Boakes     | 298000
		  12 | Vale Itzak       |  95100
		  13 | Phil Fellibrand  | 101000
		  14 | Saloma Stirley   |  67000
		  15 | Hazel Kobus      | 260000

--------------------------------------------------------------SOLUTIONS-------------------------------------------------------------------

a).  Find the names of aircraft such that all pilots certified to operate them earn more than $80,000.

   step 1 :- select aircraft.aname from aircraft inner join certified on aircraft.aid = certified.aid; (provide aname which are certified)
	
   step 2 :- select aircraft.aname from aircraft inner join certified on aircraft.aid = certified.aid group by aircraft.aname; (remove 		     duplicates )
   
   step 3 :- select aircraft.aname from aircraft inner join certified on aircraft.aid = certified.aid inner join employees on 		     employees.eid = certified.eid group by aircraft.aname having every(salary>80000)  order by aircraft.aname;
   
   
		   output :-     aname    
				-------------
				 Airbus A319
				 Airbus A320
				 Boeing 737
				 GoAir 261

   
   note :- for salary we need employees table , and order the output using order by clause , and every aggregate function is used to   		   satisfy group by clause. Without applying aggregate function we can't use the salary for comparation.
   
   	-> Aggregate function "every" -- true if all input values are true, otherwise false.
   	
   	
------------------------------------------------------------------------------------------------------------------------------------------

b). For each pilot who is certified for more than three aircraft, find the eid and the maximum cruisingrange of the aircraft for which 	she or he is certified.

  step 1 :- select emp.eid from employees as emp inner join certified as cert on emp.eid = cert.eid;    --::(find certified employees)
  
  step 2 :- select emp.eid from employees as emp inner join certified as cert on emp.eid = cert.eid inner join aircraft as air on air.aid 	    = cert.aid group by emp.eid  having count(air.aid)>3;       --::(find eid having aircraft greater than 3)
  
  step 3 :- select emp.eid, max(air.cruising_range) from employees as emp inner join certified as cert on emp.eid = cert.eid inner join 		    aircraft as air on air.aid = cert.aid group by emp.eid  having count(air.aid)>3;     --:: (max cruising_range)
  
  	output :-
  		 eid |  max  
		-----+-------
		   4 | 16670
		   6 |  6940
		   1 | 16670

  
  NOTE :- IN these question we use alias ( emp for employees , cert for certified , air for aircraft ).

------------------------------------------------------------------------------------------------------------------------------------------

c). Find the names of pilots whose salary is less than the price of the cheapest route from Los Angeles to Honolulu.

 step 1 :- select min(price) from flights where "from" = 'Los-angeles' and "to" = 'Honolulu';   --::(find cheapest route price )
 
 		  min  
		-------
		 14050

 step 2 :- select emp.ename from employees as emp inner join certified as cert on emp.eid=cert.eid where salary < (select min(price) from 	   flights where "from" = 'Los-angeles' and "to" = 'Honolulu');
 
	output:-	
			 ename 
			-------

 NOTE :- In this question we use inner query because we don't have any relation with flights table, Nothing in the output because there's 	 no pilot present how is having salary less than 14050. 

------------------------------------------------------------------------------------------------------------------------------------------

d). For all aircraft with cruisingrange over 1000 miles, find the name of the aircraft and the average salary of all pilots certified for this aircraft.

 step 1 :- select aname from aircraft where cruising_range > 1000;      --::( find aname having crrising range > 1000)
 
 step 2 :- select aname from aircraft as air inner join certified as cert on air.aid=cert.aid  where cruising_range > 1000;
 			--:: (check for certified pilots)
 			
 step 3 :- select air.aname,avg(emp.salary) from aircraft as air inner join certified as cert on air.aid=cert.aid inner join employees as 	   emp on emp.eid=cert.eid group by air.aname  having every(cruising_range > 1000);
 
     output :-
			    aname             |         avg         
		------------------------------+---------------------
		 Airbus A320                  | 483333.333333333333
		 Airbus A319                  | 320000.000000000000
		 Boeing 737-85H               | 292500.000000000000
		 GoAir 261                    | 105000.000000000000
		 Airbus A340-500              | 215000.000000000000
		 Boeing 737                   | 250333.333333333333
		 Airbus 720                   | 248333.333333333333
		 Cessna 560 XL Citation Excel | 284000.000000000000
		 SPice-jet SG440              | 345250.000000000000

 NOTE :- join the employees table for salary, group by is used for group the aname to find the average salary and every aggregate 	function for satisfying group clause .

------------------------------------------------------------------------------------------------------------------------------------------

e). Find the names of pilots certified for some Boeing aircraft.

 :-> select emp.ename from employees as emp inner join certified as cert on emp.eid = cert.eid inner join aircraft as air on air.aid = 	cert.aid where air.aname LIKE 'Boeing%';
 
  output :-						Justification :- 
  								
  	      ename       				      ename       |     aname      	
	------------------				------------------+----------------
	 Aurthur Zorzetti				 Aurthur Zorzetti | Boeing 121
	 Elysia Kersey					 Elysia Kersey    | Boeing 737-85H
	 Georgy Street					 Georgy Street    | Boeing 737
	 Phil Fellibrand				 Phil Fellibrand  | Boeing 737
	 Silvia Ainscow				 Silvia Ainscow   | Boeing 737
	 Silvia Ainscow				 Silvia Ainscow   | Boeing 737-85H
	 Silvia Ainscow				 Silvia Ainscow   | Boeing 121

NOTE :- LIKE is used for having all aname which start with 'Boeing' justification is used to show that the same pilot can fly any number 		of different flights.

------------------------------------------------------------------------------------------------------------------------------------------

f). Find the aids of all aircraft that can be used on routes from Los Angeles to Chicago.

 :-> select aid from aircraft where cruising_range >= (select distance from flights where "from"='Los-angeles' and "to"='chicago');
 
 output :-
	 aid 
	-----
	  51
	  52
	  53
	  54
	  55
	  56
	  57
	  59
	  60



------------------------------------------------------------------------------------------------------------------------------------------

g). Identify the routes that can be piloted by every pilot who makes more than $100,000.


 :-> select DISTINCT("from","to"),distance from flights where distance <= (select min(cruising_range) from aircraft as air inner join 	certified as cert on air.aid = cert.aid inner join employees as emp on emp.eid=cert.eid where salary > 100000);
 
 output:-
	       row        | distance 
	------------------+----------
	 (Delhi,Srinagar) |      640


------------------------------------------------------------------------------------------------------------------------------------------

h). Print the enames of pilots who can operate planes with cruisingrange greater than 3000 miles but are not certified on any Boeing aircraft.

 step 1 :- select ename from employees as emp inner join certified as cert on emp.eid=cert.eid ;    --::(For certified pilot)
 
 step 2 :- select ename from employees as emp inner join certified as cert on emp.eid=cert.eid inner join aircraft as air
	   on air.aid=cert.aid where air.cruising_range > 3000;             --::(for cruising range condition we join aircraft table)
	   
 step 3 :- select DISTINCT(ename) from employees as emp inner join certified as cert on emp.eid=cert.eid inner join aircraft as air
	   on air.aid=cert.aid where air.cruising_range > 3000 and air.aname NOT IN (select aname from aircraft where aname LIKE          'Boeing%') order by ename;
	   
 output :-		      ename       
			------------------
			 Aleen Battill
			 Elysia Kersey
			 Florina Pheasant
			 Georgy Street
			 Hazel Kobus
			 Loren Irnys
			 Phil Fellibrand
			 Ruby Rodenborch
			 Shay Franzetti
			 Silvia Ainscow
			 Thaine Dainter

NOTE :- we use inner query for NOT IN condition which can filter the aname which having 'Boeing' in there name.

------------------------------------------------------------------------------------------------------------------------------------------

i). A customer wants to travel from Madison to New York with no more than two changes of flight. List the choice of departure times from Madison if the customer wants to arrive in New York by 6 p.m.

--> FLIGHT TABLE FOR "I"TH QUESTION 

	 flno |     from     |      to      | distance | departs  | arrives  | price  
	------+--------------+--------------+----------+----------+----------+--------
	 1001 | London       | Malaga       |     1680 | 10:30:00 | 14:20:00 |   4580
	 1002 | Toulouse     | Bristol      |      915 | 11:00:00 | 11:55:00 |  23550
	 1005 | Mumbai       | Jaisalmer    |      895 | 14:15:00 | 16:05:00 |   5200
	 1006 | Los-angeles  | chicago      |     2818 | 15:55:00 | 21:56:00 |  15390
	 1008 | Delhi        | Srinagar     |      640 | 08:10:00 | 09:15:00 |   8300
	 1010 | New-Delhi    | Montreal     |    11842 | 23:55:00 | 06:10:00 | 160000
	 1011 | Los-angeles  | Honolulu     |     4108 | 18:10:00 | 22:10:00 |  14050
	 1004 | Los-angeles  | Honolulu     |     4108 | 17:05:00 | 21:05:00 |  16342
	 1003 | madison      | indianpolis  |      284 | 01:30:00 | 06:30:00 |   5400
	 1009 | philadelphia | new-york     |      130 | 11:30:00 | 17:30:00 |   3200
	 1012 | madison      | chicago      |      112 | 13:20:00 | 14:20:00 |   2900
	 1013 | indianapolis | philadelphia |      588 | 06:45:00 | 11:15:00 |   4100
	 1014 | chicago      | new-york     |     1100 | 14:45:00 | 17:00:00 |   5870
	 1007 | madison      | new-york     |     1301 | 10:30:00 | 17:45:00 |  47242
	 
	 
 1) FOR DIRECT FLIGHT :-
 	select departs from flights 
	where "from" = 'madison' and "to" = 'new-york' 
	and arrives < '18:00:00';

 2) FOR ONE CHANGE :-
 	select fli1.departs from flights as fli1,flights as fli2 
	where fli1."from" = 'madison' and fli1."to" <> 'new-york' 
	and fli2."from" = fli1."to"  and fli2."to" = 'new-york' 
	and fli2.departs > fli1.arrives 
	and fli2.arrives < '18:00:00';
	
 3) FOR TWO CHANGE :-
 	select fli1.departs from flights as fli1,flights as fli2,flights as fli3 
	where fli1."from" = 'madison' and fli1."to" <> 'new-york' 
	and fli2."from" = fli1."to"  and fli2."to"<> 'new-york' 
	and fli3."from" = fli2."to"  and fli3."to" = 'new-york' 
	and fli2.departs > fli1.arrives 
	and fli3.departs > fli2.arrives 
	and fli3.arrives < '18:00:00';
	
	
 COMBINED QUERIES :-
 
 	(select departs from flights 
	where "from" = 'madison' and "to" = 'new-york' 
	and arrives < '18:00:00') 
	UNION
	(select fli1.departs from flights as fli1,flights as fli2 
	where fli1."from" = 'madison' and fli1."to" <> 'new-york' 
	and fli2."from" = fli1."to"  and fli2."to" = 'new-york' 
	and fli2.departs > fli1.arrives 
	and fli2.arrives < '18:00:00')
	UNION
	(select fli1.departs from flights as fli1,flights as fli2,flights as fli3 
	where fli1."from" = 'madison' and fli1."to" <> 'new-york' 
	and fli2."from" = fli1."to"  and fli2."to"<> 'new-york' 
	and fli3."from" = fli2."to"  and fli3."to" = 'new-york' 
	and fli2.departs > fli1.arrives 
	and fli3.departs > fli2.arrives 
	and fli3.arrives < '18:00:00')
	
	
	
	output :-
		 departs  
		----------
		 01:30:00
		 10:30:00
		 13:20:00


NOTE :- 

	conditions :- 
		1. start from 'madison'.
		2. end at 'new-york'.
		3. max 2 change in flight and reach before 6 PM.
		4. for 0 change -> start from 'madison' , end at 'new-york' and arrives before 6 PM. 
		5. for 1 change -> second flight start = first flight end  and second flight departure time must be greater then first 			   flight arrival time.
		6. for 2 change -> second flight start = first flight end  and second flight departure time must be greater then first 			   flight arrival time. Third flight start = second flight end  and third flight departure time must be greater then     			   second flight arrival time.


------------------------------------------------------------------------------------------------------------------------------------------

j). Compute the difference between the average salary of a pilot and the average salary of all employees (including pilots).

 step 1 :- select avg(salary) emp_avg from employees;     
 	 
 	   emp_avg       
	---------------------
	 221873.333333333333
	 
 step 2 :- select avg(DISTINCT(salary)) from employees as emp inner join certified as cert on emp.eid = cert.eid;
 	
 	        avg         
	---------------------
	 239000.000000000000
	 
 step 3 :- select (select avg(DISTINCT(salary)) from employees as emp inner join certified as cert on emp.eid = cert.eid)- (select 	   avg(salary) emp_avg from employees) as Difference_avg;
 
  output :-
	   difference_avg   
	--------------------
	 17126.666666666667




------------------------------------------------------------------------------------------------------------------------------------------

k). Print the name and salary of every nonpilot whose salary is more than the average salary for pilots.

 step 1 :- select ename , salary from employees where eid NOT IN (select emp.eid from employees as emp inner join certified as cert on   emp.eid=cert.eid);        --::( for non pilot)
 
 	     ename      | salary 
	----------------+--------
	 Raine Boakes   | 298000
	 Vale Itzak     |  95100
	 Saloma Stirley |  67000

 step 2 :- select ename , salary from employees where eid NOT IN (select emp.eid from employees as emp inner join certified as cert on emp.eid=cert.eid) and salary > (select avg(DISTINCT(salary)) from employees as emp inner join certified as cert on emp.eid = cert.eid);
 
 output:- 
 
	    ename     | salary 
	--------------+--------
	 Raine Boakes | 298000


 NOTE :- 'and' is used here to satisfy both the conditions.

------------------------------------------------------------------------------------------------------------------------------------------

l). Print the names of employees who are certified only on aircrafts with cruising range longer than 1000 miles.

 :-> select DISTINCT(ename) from employees as emp inner join certified as cert on emp.eid=cert.eid inner join aircraft as air on    	air.aid=cert.aid where air.cruising_range > 1000;
 
 	output :-
		      ename       
		------------------
		 Georgy Street
		 Phil Fellibrand
		 Silvia Ainscow
		 Elysia Kersey
		 Aleen Battill
		 Shay Franzetti
		 Hazel Kobus
		 Thaine Dainter
		 Loren Irnys
		 Ruby Rodenborch
		 Florina Pheasant


------------------------------------------------------------------------------------------------------------------------------------------

m). Print the names of employees who are certified only on aircrafts with cruising range longer than 1000 miles, but on at least two such aircrafts.

 :-> select count(*),ename from employees as emp inner join certified as cert on emp.eid=cert.eid inner join aircraft as air on 		air.aid=cert.aid group by ename having count(air.aname)>=2 and every(air.cruising_range > 1000) order by ename;
 
 output :-
	 count |      ename       
	-------+------------------
	     2 | Aleen Battill
	     3 | Elysia Kersey
	     3 | Florina Pheasant
	     4 | Georgy Street
	     2 | Loren Irnys
	     3 | Phil Fellibrand
	     2 | Shay Franzetti
	     4 | Thaine Dainter


------------------------------------------------------------------------------------------------------------------------------------------

n). Print the names of employees who are certified only on aircrafts with cruising range longer than 1000 miles and who are certified on some Boeing aircraft.

 :-> select DISTINCT(ename) from employees as emp inner join certified as cert on emp.eid=cert.eid inner join aircraft as air on air.aid=cert.aid where air.cruising_range > 1000 and air.aid IN (select aid from aircraft where aname LIKE 'Boeing%'); 
 
 output:-
	      ename      
	-----------------
	 Elysia Kersey
	 Georgy Street
	 Phil Fellibrand
	 Silvia Ainscow

 
 
 


---------------------------------------------------------ASSIGNMENT COMPLETED-------------------------------------------------------------

































































































